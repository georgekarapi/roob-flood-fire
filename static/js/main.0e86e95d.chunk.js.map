{"version":3,"sources":["components/Cityinfo.jsx","components/Cardboard.jsx","components/RiskCard.jsx","components/Map.jsx","pages/Dashboard.jsx","App.jsx","index.jsx"],"names":["wdk","require","fetch","useStyles","makeStyles","theme","root","height","Cityinfo","viewport","useState","country","population","area","urban","data","setData","useEffect","wikidata","ids","url","getEntities","then","res","json","parse","wd","entities","d","Object","keys","claims","P17","P1082","P2046","Box","mb","mt","Typography","variant","place","Number","toLocaleString","getUserLocale","Cardboard","title","subtitle","child","classes","Card","className","m","defaultProps","RiskCard","setArea","insurance","setInsurance","riskScore","setRiskScore","totalScore","setTotalScore","toFixed","Grid","container","justify","spacing","item","TextField","label","value","onChange","e","target","InputProps","startAdornment","InputAdornment","position","endAdornment","style","marginTop","marginBottom","map","width","top","bottom","Map","setViewport","mapEl","useRef","mapboxgl","accessToken","current","center","attributionControl","maxZoom","zoom","geocoder","MapboxGeocoder","setTypes","addControl","NavigationControl","on","r","console","log","result","text","lat","long","properties","remove","ref","zIndex","panel","Dashboard","Slide","direction","in","mountOnEnter","unmountOnExit","md","sm","xs","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e86e95d.chunk.js","sourcesContent":["/* eslint-disable no-new-wrappers */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/require-default-props */\nimport PropTypes from 'prop-types';\nimport { Box, Card, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\n\nimport getUserLocale from 'get-user-locale';\n\nconst wdk = require('wikidata-sdk');\nconst fetch = require('node-fetch');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n  },\n}));\n\nconst Cityinfo = ({ viewport }) => {\n  const classes = useStyles();\n  const [data, setData] = useState({\n    country: null,\n    population: null,\n    area: null,\n    urban: null,\n  });\n\n  useEffect(() => {\n    if (viewport.wikidata) {\n      const ids = viewport.wikidata;\n      const languages = ['en'];\n      const props = ['info', 'claims'];\n      const format = 'json';\n      const redirections = false;\n      const url = wdk.getEntities(ids, languages, props, format, redirections);\n\n      fetch(url).then((res) => res.json())\n        .then(wdk.parse.wd.entities).then((entities) => {\n          const d = entities[Object.keys(entities)[0]].claims;\n          setData({\n            country: d.P17 || null,\n            population: d.P1082 || null,\n            area: d.P2046 || null,\n          });\n        });\n    }\n  }, [viewport]);\n  return (\n    <>\n      <Box mb={4} mt={4}>\n        <Typography variant=\"h5\">{viewport.place}</Typography>\n      </Box>\n      <Box mt={4}>\n        <Typography variant=\"h6\">Population:</Typography>\n        <Typography>{new Number(data.population).toLocaleString(getUserLocale())}</Typography>\n      </Box>\n      {data.area && (\n        <Box mt={2}><Typography variant=\"h6\">Area:</Typography>\n          <Typography>{data.area} km²</Typography>\n        </Box>\n      )}\n    </>\n  );\n};\n\nCityinfo.propTypes = {\n  viewport: PropTypes.object.isRequired,\n};\n\nexport default Cityinfo;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Card, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n  },\n}));\n\nconst Cardboard = ({ title, subtitle, child }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <Box m={4}>\n        <Box mb={4} mt={4}>\n          <Box>\n            <Typography variant=\"h5\">{title}</Typography>\n          </Box>\n          <Box>\n            {subtitle && <Typography variant=\"caption\">{subtitle}</Typography>}\n          </Box>\n        </Box>\n        <Box mt={4}>\n          {child}\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n\nCardboard.defaultProps = {\n  title: '',\n  subtitle: '',\n};\n\nCardboard.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  child: PropTypes.object.isRequired,\n};\n\nexport default Cardboard;\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useState, useEffect, PureComponent } from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { Typography } from '@material-ui/core';\n\nconst RiskCard = () => {\n  const [area, setArea] = useState('');\n  const [insurance, setInsurance] = useState('');\n  const [riskScore, setRiskScore] = useState('');\n\n  const [totalScore, setTotalScore] = useState(0);\n\n  useEffect(() => {\n    if (area && insurance && riskScore && area !== 0 && insurance !== 0 && riskScore !== 0) {\n      setTotalScore((area * insurance * riskScore).toFixed(3));\n    }\n  }, [area, insurance, riskScore]);\n  return (\n    <Grid container justify=\"center\" spacing={2}>\n      <Grid item>\n        <TextField\n          label=\"Area\"\n          variant=\"outlined\"\n          value={area}\n          onChange={(e) => setArea(e.target.value)}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">m²</InputAdornment>,\n          }}\n        />\n      </Grid>\n      <Grid item>\n        <TextField\n          label=\"Insurance Cost\"\n          variant=\"outlined\"\n          value={insurance}\n          onChange={(e) => setInsurance(e.target.value)}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">€/m²</InputAdornment>,\n          }}\n        />\n      </Grid>\n      <Grid item>\n        <TextField label=\"Risk Score\" variant=\"outlined\" value={riskScore} onChange={(e) => setRiskScore(e.target.value)} />\n      </Grid>\n      {totalScore !== 0 && (\n        <Grid\n          item\n          style={{\n            marginTop: 'auto',\n            marginBottom: 'auto',\n          }}\n        >\n          <Typography>\n            <b>=</b>\n            {totalScore}\n          </Typography>\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default RiskCard;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/require-default-props */\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useRef, useEffect } from 'react';\n\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nimport { PropTypes } from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  map: {\n    position: 'absolute',\n    width: '100%',\n    top: 0,\n    bottom: 0,\n  },\n}));\n\nconst Map = ({\n  viewport, setViewport,\n}) => {\n  const classes = useStyles();\n  const mapEl = useRef(null);\n\n  mapboxgl.accessToken = 'pk.eyJ1IjoiZ2thcmFwaSIsImEiOiJja2kya25rcHUxZW5hMnNvYW5vYWc1d2tpIn0.i3-Wxd8bAusPYp2R16fQtQ';\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapEl.current,\n      style: 'mapbox://styles/gkarapi/cki4z3dbx1bst19rn9i2zmkug',\n      center: [10.015, 44.895],\n      attributionControl: false,\n      maxZoom: 7.6,\n      zoom: 3.80,\n    });\n\n    const geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl,\n    });\n    geocoder.setTypes('country,place');\n\n    map.addControl(geocoder, 'top-left');\n    map.addControl(new mapboxgl.NavigationControl());\n\n    geocoder.on('result', (r) => {\n      console.log(r);\n      setViewport({\n        place: r.result.text || null,\n        lat: r.result.center[0] || null,\n        long: r.result.center[1] || null,\n        wikidata: r.result.properties.wikidata || null,\n      });\n    });\n    return () => map.remove();\n  }, []);\n\n  return (\n    <div ref={mapEl} className={classes.map} />\n  );\n};\n\nMap.propTypes = {\n  viewport: PropTypes.object.isRequired,\n  setViewport: PropTypes.func.isRequired,\n};\n\nexport default Map;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Slide from '@material-ui/core/Slide';\n\nimport Cityinfo from '../components/Cityinfo';\nimport Cardboard from '../components/Cardboard';\nimport RiskCard from '../components/RiskCard';\nimport Map from '../components/Map';\n\nconst useStyles = makeStyles((theme) => ({\n  map: {\n    zIndex: 1,\n  },\n  panel: {\n    zIndex: 2,\n    position: 'absolute',\n    bottom: 0,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [viewport, setViewport] = useState({\n    place: null,\n    lat: null,\n    long: null,\n    wikidata: null,\n  });\n\n  return (\n    <div className={classes.root}>\n      <Map className={classes.map} viewport={viewport} setViewport={setViewport} />\n      <Slide direction=\"up\" in={viewport.place} mountOnEnter unmountOnExit>\n        <Grid container className={classes.panel}>\n          <Grid item md={6} sm={6} xs={12}>\n            <Cardboard child={<Cityinfo viewport={viewport} />} />\n          </Grid>\n          <Grid item md={6} sm={6} xs={12}>\n            <Cardboard title=\"Risk Calculator\" child={<RiskCard />} />\n          </Grid>\n        </Grid>\n      </Slide>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { React } from 'react';\nimport './App.css';\n\nimport Dashboard from './pages/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}