{"version":3,"sources":["components/Cityinfo.jsx","components/Cardboard.jsx","components/Airquality.jsx","components/Map.jsx","pages/Dashboard.jsx","App.jsx","index.jsx"],"names":["wdk","require","fetch","useStyles","makeStyles","theme","root","height","Cityinfo","viewport","useState","country","population","area","urban","data","setData","useEffect","wikidata","ids","url","getEntities","then","res","json","parse","wd","entities","d","Object","keys","claims","P17","P1082","P2046","Box","mb","mt","Typography","variant","place","Number","toLocaleString","getUserLocale","Cardboard","title","subtitle","child","classes","Card","className","m","defaultProps","Airquality","APIWEATHERBITKEY","process","lat","long","axios","get","temp","map","p","aqi","timestamp","Date","timestamp_local","toLocaleDateString","slice","Math","max","length","Grid","container","justify","item","width","strokeDasharray","dataKey","fill","position","top","bottom","Map","setViewport","mapEl","useRef","mapboxgl","accessToken","APIMAPBOX","current","style","center","attributionControl","maxZoom","zoom","geocoder","MapboxGeocoder","setTypes","addControl","NavigationControl","on","r","console","log","result","text","properties","remove","ref","zIndex","panel","Dashboard","Slide","direction","in","mountOnEnter","unmountOnExit","md","sm","xs","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff641228.chunk.js","sourcesContent":["/* eslint-disable no-new-wrappers */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/require-default-props */\nimport PropTypes from 'prop-types';\nimport { Box, Card, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useEffect, useState } from 'react';\n\nimport getUserLocale from 'get-user-locale';\n\nconst wdk = require('wikidata-sdk');\nconst fetch = require('node-fetch');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n  },\n}));\n\nconst Cityinfo = ({ viewport }) => {\n  const classes = useStyles();\n  const [data, setData] = useState({\n    country: null,\n    population: null,\n    area: null,\n    urban: null,\n  });\n\n  useEffect(() => {\n    if (viewport.wikidata) {\n      const ids = viewport.wikidata;\n      const languages = ['en'];\n      const props = ['info', 'claims'];\n      const format = 'json';\n      const redirections = false;\n      const url = wdk.getEntities(ids, languages, props, format, redirections);\n\n      fetch(url).then((res) => res.json())\n        .then(wdk.parse.wd.entities).then((entities) => {\n          const d = entities[Object.keys(entities)[0]].claims;\n          setData({\n            country: d.P17 || null,\n            population: d.P1082 || null,\n            area: d.P2046 || null,\n          });\n        });\n    }\n  }, [viewport]);\n  return (\n    <>\n      <Box mb={4} mt={4}>\n        <Typography variant=\"h5\">{viewport.place}</Typography>\n      </Box>\n      <Box mt={4}>\n        <Typography variant=\"h6\">Population:</Typography>\n        <Typography>{new Number(data.population).toLocaleString(getUserLocale())}</Typography>\n      </Box>\n      {data.area && (\n        <Box mt={2}><Typography variant=\"h6\">Area:</Typography>\n          <Typography>{data.area} kmÂ²</Typography>\n        </Box>\n      )}\n    </>\n  );\n};\n\nCityinfo.propTypes = {\n  viewport: PropTypes.object.isRequired,\n};\n\nexport default Cityinfo;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Card, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n  },\n}));\n\nconst Cardboard = ({ title, subtitle, child }) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.root}>\n      <Box m={4}>\n        <Box mb={4} mt={4}>\n          <Box>\n            <Typography variant=\"h5\">{title}</Typography>\n          </Box>\n          <Box>\n            {subtitle && <Typography variant=\"caption\">{subtitle}</Typography>}\n          </Box>\n        </Box>\n        <Box mt={4}>\n          {child}\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n\nCardboard.defaultProps = {\n  title: '',\n  subtitle: '',\n};\n\nCardboard.propTypes = {\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  child: PropTypes.object.isRequired,\n};\n\nexport default Cardboard;\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useState, useEffect, PureComponent } from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core';\n\nconst Airquality = ({ viewport }) => {\n  const { APIWEATHERBITKEY } = process.env;\n  const url = 'https://api.weatherbit.io/v2.0/history/airquality';\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    if (viewport.lat !== null || viewport.long !== null) {\n      axios.get(`${url}?lat=${viewport.lat}&lon=${viewport.long}&key=${APIWEATHERBITKEY}`)\n        .then((res) => {\n          if (res.data.data) {\n            const temp = res.data.data.map((p) => ({\n              aqi: p.aqi,\n              timestamp: new Date(p.timestamp_local).toLocaleDateString(),\n            }));\n            setData(temp.slice(Math.max(temp.length - 12, 0)));\n          } else {\n            setData(null);\n          }\n        });\n    }\n  }, [viewport]);\n  return (\n    <Grid container justify=\"center\">\n      <Grid item>\n        {!data ? <Typography>Sorry doesn&apos;t exist in the database :/</Typography>\n          : (\n            <BarChart\n              width={460}\n              height={180}\n              data={data}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"timestamp\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"aqi\" fill=\"#82ca9d\" />\n            </BarChart>\n          )}\n      </Grid>\n    </Grid>\n  );\n};\n\nAirquality.propTypes = {\n  viewport: PropTypes.object.isRequired,\n};\n\nexport default Airquality;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable react/forbid-prop-types */\n/* eslint-disable react/require-default-props */\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useRef, useEffect } from 'react';\n\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\n\nimport { PropTypes } from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  map: {\n    position: 'absolute',\n    width: '100%',\n    top: 0,\n    bottom: 0,\n  },\n}));\n\nconst Map = ({\n  viewport, setViewport,\n}) => {\n  const classes = useStyles();\n  const mapEl = useRef(null);\n\n  mapboxgl.accessToken = process.env.APIMAPBOX;\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapEl.current,\n      style: 'mapbox://styles/gkarapi/cki4z3dbx1bst19rn9i2zmkug',\n      center: [10.015, 44.895],\n      attributionControl: false,\n      maxZoom: 7.6,\n      zoom: 3.80,\n    });\n\n    const geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken,\n      mapboxgl,\n    });\n    geocoder.setTypes('country,place');\n\n    map.addControl(geocoder, 'top-left');\n    map.addControl(new mapboxgl.NavigationControl());\n\n    geocoder.on('result', (r) => {\n      console.log(r);\n      setViewport({\n        place: r.result.text || null,\n        lat: r.result.center[0] || null,\n        long: r.result.center[1] || null,\n        wikidata: r.result.properties.wikidata || null,\n      });\n    });\n    return () => map.remove();\n  }, []);\n\n  return (\n    <div ref={mapEl} className={classes.map} />\n  );\n};\n\nMap.propTypes = {\n  viewport: PropTypes.object.isRequired,\n  setViewport: PropTypes.func.isRequired,\n};\n\nexport default Map;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Grid from '@material-ui/core/Grid';\nimport Slide from '@material-ui/core/Slide';\n\nimport Cityinfo from '../components/Cityinfo';\nimport Cardboard from '../components/Cardboard';\nimport Airquality from '../components/Airquality';\nimport Map from '../components/Map';\n\nconst useStyles = makeStyles((theme) => ({\n  map: {\n    zIndex: 1,\n  },\n  panel: {\n    zIndex: 2,\n    position: 'absolute',\n    bottom: 0,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [viewport, setViewport] = useState({\n    place: null, lat: null, long: null, wikidata: null,\n  });\n\n  return (\n    <div className={classes.root}>\n      <Map className={classes.map} viewport={viewport} setViewport={setViewport} />\n      <Slide direction=\"up\" in={viewport.place} mountOnEnter unmountOnExit>\n        <Grid container className={classes.panel}>\n          <Grid item md={6} sm={6} xs={12}>\n            <Cardboard child={<Cityinfo viewport={viewport} />} />\n          </Grid>\n          <Grid item md={6} sm={6} xs={12}>\n            <Cardboard title=\"Air Quality\" child={<Airquality viewport={viewport} />} />\n          </Grid>\n        </Grid>\n      </Slide>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { React } from 'react';\nimport './App.css';\n\nimport Dashboard from './pages/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}